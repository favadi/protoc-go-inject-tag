syntax = "proto3";

package pb;
option go_package = "/pb";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

message IP {
  string Address = 1; // @inject_tag: valid:"ip" yaml:"ip" json:"overrided"
}

message URL {
  // @inject_tag: valid:"http|https"
  string scheme = 1;
  string url = 2;
  // @inject_tag: valid:"nonzero"
  int32 port = 3;
}

service StreamService {
  rpc GetRecords(Params) returns (stream Record) {}
}

message Params {
  // @inject_tag: validate:"omitempty"
  string id = 1;
  // gets converted into XXX_Deprecated, for use with testing pre-v1.4.x protoc-gen-go
  // functionality that exposes unknown fields as public.
  string XXX__deprecated = 2;
}

message Record {
  // @inject_tag: validate:"omitempty"
  string id = 1;
  google.protobuf.Any test_any = 2;
  google.protobuf.Empty test_empty = 3;
}

message OneOfObject {
  // @inject_tag: tag:"foo_bar"
  oneof foo_bar {
    // @inject_tag: tag:"foo"
    string foo = 1;
    // @inject_tag: tag:"bar"
    int64 bar = 2;
  }
}
